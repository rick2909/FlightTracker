<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - FlightTracker</title>
    <base href="/" />
    <script type="importmap"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    <link rel="stylesheet" href="/_content/Radzen.Blazor/css/material3.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true"/>
</head>
<body class="layout">
    <nav class="">
        @await Html.PartialAsync("_Sidebar")
    </nav>
    <div class="layout__main">
        <header class="layout__header">
            @if (IsSectionDefined("HeaderContent"))
            {
                @RenderSection("HeaderContent", required: false)
            }
            else
            {
                <p class="layout__subtitle">@ViewData["Title"]</p>
            }
        </header>
        <main role="main" class="layout__content">
            @RenderBody()
        </main>
        <footer class="layout__footer">&copy; 2025 - FlightTracker.Web - <a asp-controller="Home" asp-action="Privacy">Privacy</a></footer>
    </div>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="/_content/Radzen.Blazor/Radzen.Blazor.js"></script>
    <!-- Blazor server script needed for interactive components rendered inside MVC views -->
    <script src="/_framework/blazor.server.js"></script>
    <script>
        (function(){
            const sidebar=document.querySelector('[data-sidebar]');
            const toggle=document.querySelector('[data-sidebar-toggle]');
            const nav=document.querySelector('[data-sidebar-nav]');
            if(!sidebar||!toggle) return;
            function setState(collapsed){
                sidebar.classList.toggle('sidebar--collapsed',collapsed);
                toggle.setAttribute('aria-expanded',(!collapsed).toString());
            }
            toggle.addEventListener('click',e=>{
                e.stopPropagation();
                setState(!sidebar.classList.contains('sidebar--collapsed'));
            });
            // Clicking on whitespace inside collapsed sidebar (not a link or button) expands it
            sidebar.addEventListener('click',e=>{
                if(!sidebar.classList.contains('sidebar--collapsed')) return;
                const target=e.target;
                if(target.closest('button, a')) return; // ignore interactive elements
                setState(false);
            });
            nav?.addEventListener('click',e=>{
                if(e.target.closest('a') && sidebar.classList.contains('sidebar--collapsed')){
                    setState(false);
                }
            });
        })();
    </script>
        @await RenderSectionAsync("Scripts", required: false)
</body>
</html>