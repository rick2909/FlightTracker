@{
    var currentController = (string?)ViewContext.RouteData.Values["controller"] ?? string.Empty;
    var currentAction = (string?)ViewContext.RouteData.Values["action"] ?? string.Empty;
    bool IsActive(string controller, string? action = null)
    {
        if (!string.Equals(currentController, controller, StringComparison.OrdinalIgnoreCase)) return false;
        if (action == null) return true;
        return string.Equals(currentAction, action, StringComparison.OrdinalIgnoreCase);
    }
}
@{
    var displayName = User?.Identity?.IsAuthenticated == true ? User.Identity!.Name ?? "User" : "Guest User";
    string GetInitials(string name)
    {
        var parts = name.Split(' ', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
        if (parts.Length == 0) return "GU";
        if (parts.Length == 1) return new string(parts[0].Take(2).Select(char.ToUpper).ToArray());
        return string.Concat(char.ToUpper(parts[0][0]), char.ToUpper(parts[1][0]));
    }
    var initials = GetInitials(displayName);
    // TODO: Inject a service to fetch the next upcoming user flight.
    // Placeholder logic until application service is wired.
    FlightTracker.Domain.Enums.FlightStatus? nextFlightStatus = null; // replace with real status
    DateTime? nextDepartureUtc = null; // replace with real departure
    string statusIcon = nextFlightStatus switch
    {
        FlightTracker.Domain.Enums.FlightStatus.Scheduled => "flight_takeoff",
        FlightTracker.Domain.Enums.FlightStatus.Delayed => "schedule",
        FlightTracker.Domain.Enums.FlightStatus.Boarding => "airline_seat_recline_normal",
        FlightTracker.Domain.Enums.FlightStatus.Departed => "flight_takeoff",
        FlightTracker.Domain.Enums.FlightStatus.InFlight => "flight",
        FlightTracker.Domain.Enums.FlightStatus.Landed => "flight_land",
        FlightTracker.Domain.Enums.FlightStatus.Cancelled => "cancel",
        FlightTracker.Domain.Enums.FlightStatus.Diverted => "alt_route",
        _ => "airplanemode_inactive"
    };
    string statusLabel = nextDepartureUtc.HasValue 
        ? nextDepartureUtc.Value.ToString("HH:mm") 
        : "None";
    string statusCss = nextFlightStatus?.ToString().ToLowerInvariant() ?? "none";

    var profileImageUrl = ViewBag.ProfileImageUrl as string
        ?? User?.Claims?.FirstOrDefault(c => c.Type == "picture")?.Value;
}
<aside class="sidebar" aria-label="Primary navigation" data-sidebar>
    <div class="sidebar__scroll">
    <div class="sidebar__profile-card sidebar__section">
    <div class="sidebar__avatar" aria-hidden="true">
        @if (!string.IsNullOrWhiteSpace(profileImageUrl))
        {
            <img src="@profileImageUrl"
                 alt="@displayName"
                 class="sidebar__avatar-img"
                 style="width:100%;height:100%;object-fit:cover;display:block;border-radius:50%"
                 onerror="this.style.display='none'; var f=this.nextElementSibling; if(f) f.style.display='inline-flex';" />
        }
        <span class="sidebar__avatar-fallback"
              style="display:@(string.IsNullOrWhiteSpace(profileImageUrl) ? "inline-flex" : "none");width:100%;height:100%;align-items:center;justify-content:center;font-weight:600;">
            @initials
        </span>
    </div>
    <div class="sidebar__profile-text sidebar__profile-text-transition">
            <div class="sidebar__name" title="@displayName">@displayName</div>
            <div class="sidebar__role">Traveler</div>
        </div>
    </div>
    <div class="flight-status sidebar__section">
        <a class="flight-status__link status-@statusCss" asp-controller="Dashboard" asp-action="MyFlights" title="Next flight">
            <span class="material-icons flight-status__icon" aria-hidden="true">@statusIcon</span>
            <span class="flight-status__text">Next: @statusLabel</span>
        </a>
    </div>
    <nav class="sidebar__nav sidebar__section" data-sidebar-nav>
        <a class="sidebar__link @(IsActive("Home","Index") ? "is-active" : null)" asp-controller="Home" asp-action="Index">
            <span class="material-icons" aria-hidden="true">home</span>
            <span class="sidebar__text">Home</span>
        </a>
        <a class="sidebar__link @(IsActive("Dashboard","Index") ? "is-active" : null)" asp-controller="Dashboard" asp-action="Index">
            <span class="material-symbols-outlined" aria-hidden="true">globe</span>
            <span class="sidebar__text">Dashboard</span>
        </a>
        <a class="sidebar__link @(IsActive("Dashboard","MyFlights") ? "is-active" : null)" asp-controller="UserFlights" asp-action="Index" >
            <span class="material-symbols-outlined" aria-hidden="true">flight</span>
            <span class="sidebar__text">Flights</span>
        </a>
        <a class="sidebar__link @(IsActive("Airports") ? "is-active" : null)" asp-controller="Airports" asp-action="Index">
            <span class="material-icons" aria-hidden="true">location_city</span>
            <span class="sidebar__text">Airports</span>
        </a>
        <a class="sidebar__link @(IsActive("Passport","Index") ? "is-active" : null)" asp-controller="Passport" asp-action="Index">
            <span class="material-icons" aria-hidden="true">badge</span>
            <span class="sidebar__text">Passport</span>
        </a>
        <a class="sidebar__link @(IsActive("Settings") ? "is-active" : null)" asp-controller="Settings" asp-action="Index">
            <span class="material-icons" aria-hidden="true">settings</span>
            <span class="sidebar__text">Settings</span>
        </a>
        <a class="sidebar__link @(IsActive("Help") ? "is-active" : null)" asp-controller="Help" asp-action="Index">
            <span class="material-icons" aria-hidden="true">help_outline</span>
            <span class="sidebar__text">Help</span>
        </a>
    </nav>
    </div>
    <button class="sidebar__collapse-btn" type="button" aria-label="Toggle sidebar" aria-expanded="true" data-sidebar-toggle>
        <span class="collapse-icon-wrapper" aria-hidden="true">
            <span class="material-icons collapse-icon collapse-icon-open">arrow_right_alt</span>
            <span class="material-icons collapse-icon collapse-icon-close">close</span>
        </span>
    </button>
</aside>
