@model YourApp.Models.PassportViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "My Passport";
    var jsonOpts = new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase };

    string GetInitials(string name)
    {
        var parts = (name ?? string.Empty)
            .Split(' ', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
        if (parts.Length == 0) return "GU";
        if (parts.Length == 1) return new string(parts[0].Take(2).Select(char.ToUpper).ToArray());
        return string.Concat(char.ToUpper(parts[0][0]), char.ToUpper(parts[1][0]));
    }
    var initials = GetInitials(Model.UserName ?? "Guest User");
}

@section HeaderContent {
    <div class="ft-toolbar">
        <h2 class="layout__title" style="margin:0">My Passport</h2>
        <div class="ft-toolbar__actions">
            <select aria-label="Filter by Year" class="rz-textbox" style="padding:.5rem .75rem;border:1px solid var(--rz-input-border, #E0E0E0);border-radius:12px;min-width:140px;">
                <option value="">Filter by Year</option>
                @foreach (var kv in Model.FlightsPerYear.OrderBy(k => k.Key))
                {
                    <option value="@kv.Key">@kv.Key</option>
                }
            </select>
        </div>
    </div>
}

<!-- Enhanced Passport Card -->
<div class="passport-section">
    <div class="rz-card">
        <div class="rz-card-body" style="display:flex;align-items:center;gap:2rem;flex-wrap:wrap;padding:2rem;">
            <div class="passport-card__avatar">
                @if (!string.IsNullOrWhiteSpace(Model.AvatarUrl))
                {
                    <img src="@Model.AvatarUrl" alt="@Model.UserName"
                         onerror="this.style.display='none'; var f=this.nextElementSibling; if(f) f.style.display='inline-flex';" />
                }
                <span style="display:@(string.IsNullOrWhiteSpace(Model.AvatarUrl) ? "inline-flex" : "none");align-items:center;justify-content:center;width:100%;height:100%;font-weight:600;">
                    @initials
                </span>
            </div>
            <div style="flex:1;min-width:250px;">
                <div style="font-weight:600;font-size:1.4rem;margin-bottom:1rem;color:var(--rz-text-color);">@Model.UserName</div>
                <div class="passport-card__stats">
                    <div class="stat-item">
                        <span class="material-icons">flight</span>
                        <span class="stat-value">@Model.TotalFlights</span>
                        <span>Flights</span>
                    </div>
                    <div class="stat-item">
                        <span class="material-icons">apartment</span>
                        <span class="stat-value">@Model.AirlinesVisited?.Count</span>
                        <span>Airlines</span>
                    </div>
                    <div class="stat-item">
                        <span class="material-icons">location_city</span>
                        <span class="stat-value">@Model.AirportsVisited?.Count</span>
                        <span>Airports</span>
                    </div>
                </div>
            </div>
            <div class="passport-flags" style="margin-left:auto;">
                @if (Model.CountriesVisitedIso2 != null)
                {
                    foreach (var cc in Model.CountriesVisitedIso2)
                    {
                        var code = (cc ?? string.Empty).ToLowerInvariant();
                        <span class="fi fi-@code" title="@cc" aria-label="@cc"></span>
                    }
                }
            </div>
        </div>
        <div class="rz-card-footer">Profile overview â€¢ @Model.CountriesVisitedIso2?.Count countries visited</div>
    </div>
</div>

<!-- Enhanced Flight Routes section -->
<div class="passport-section">
    <div class="rz-card">
        <div class="rz-card-header">
            <h3><span class="material-icons" aria-hidden="true">public</span>Flight Routes</h3>
        </div>
        <div class="rz-card-body">
            <div id="flightMap" class="flight-map__map" style="min-height:60vh"></div>
        </div>
        <div class="rz-card-footer">Routes drawn from recorded flights</div>
    </div>
</div>

<!-- Cards + Charts responsive grid -->
<div class="ft-passport-grid" style="margin:1rem 0">
    <div class="ft-passport-grid__cards">
    <!-- Stats grid -->
    <div class="ft-stats-grid">
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">timeline</span>
                    <div>
                        <div class="stat-label">Total Miles</div>
                        <div class="stat-value">@Model.TotalMiles mi</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">trending_up</span>
                    <div>
                        <div class="stat-label">Longest Flight</div>
                        <div class="stat-value">@Model.LongestFlightMiles mi</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">trending_down</span>
                    <div>
                        <div class="stat-label">Shortest Flight</div>
                        <div class="stat-value">@Model.ShortestFlightMiles mi</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">airlines</span>
                    <div>
                        <div class="stat-label">Favorite Airline</div>
                        <div class="stat-value">@Model.FavoriteAirline</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">public</span>
                    <div>
                        <div class="stat-label">Countries Visited</div>
                        <div class="stat-value">@(Model.CountriesVisitedIso2?.Count ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">flight_land</span>
                    <div>
                        <div class="stat-label">Airports Visited</div>
                        <div class="stat-value">@(Model.AirportsVisited?.Count ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-symbols-outlined">multiple_airports</span>
                    <div>
                        <div class="stat-label">Favorite Airport</div>
                        <div class="stat-value">@(string.IsNullOrWhiteSpace(Model.FavoriteAirport) ? "None" : Model.FavoriteAirport)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">flight</span>
                    <div>
                        <div class="stat-label">Most flown aircraft type</div>
                        <div class="stat-value">@(string.IsNullOrWhiteSpace(Model.MostFlownAircraftType) ? "None" : Model.MostFlownAircraftType)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:1rem">
                    <span class="material-icons">flight_class</span>
                    <div>
                        <div class="stat-label">Favorite class</div>
                        <div class="stat-value">@(string.IsNullOrWhiteSpace(Model.FavoriteClass) ? "None" : Model.FavoriteClass)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        </div>
    </div>

    <aside class="ft-passport-grid__charts">
        <div class="rz-card">
            <div class="rz-card-header">
                <h3><span class="material-icons" aria-hidden="true">apartment</span>Airlines Flown</h3>
            </div>
            <div class="rz-card-body">
                <div id="passport-airlines-pie" style="min-height:260px"></div>
            </div>
        </div>

        <div class="rz-card">
            <div class="rz-card-header">
                <h3><span class="material-icons" aria-hidden="true">flight</span>Aircraft Types</h3>
            </div>
            <div class="rz-card-body">
                <div id="passport-aircraft-pie" style="min-height:260px"></div>
            </div>
        </div>
    </aside>
</div>

<!-- Enhanced Flights per Year chart -->
<div class="passport-section">
    <div class="rz-card">
        <div class="rz-card-header">
            <h3><span class="material-icons" aria-hidden="true">bar_chart</span>Flights Per Year</h3>
        </div>
        <div class="rz-card-body">
            <div id="passport-chart" style="min-height:300px"></div>
        </div>
        <div class="rz-card-footer">Yearly flight counts</div>
    </div>
</div>

@section Scripts {
    <!-- Data payload for shared flight map component -->
    <script type="application/json" id="flightMapData">@Html.Raw(JsonSerializer.Serialize(Model.Routes ?? new(), jsonOpts))</script>
    <script type="application/json" id="passportFlightsPerYear">@Html.Raw(JsonSerializer.Serialize(Model.FlightsPerYear ?? new(), jsonOpts))</script>
    <script type="application/json" id="passportFlightsByAirline">@Html.Raw(JsonSerializer.Serialize(Model.FlightsByAirline ?? new(), jsonOpts))</script>
    <script type="application/json" id="passportFlightsByAircraftType">@Html.Raw(JsonSerializer.Serialize(Model.FlightsByAircraftType ?? new(), jsonOpts))</script>

    <!-- Dependencies (ApexCharts for charting) -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <!-- Shared flight map script (auto-initializes if #flightMap and #flightMapData exist) -->
    <script src="~/js/flight-map.js" asp-append-version="true"></script>
    <!-- Page script -->
    <script src="~/js/passport.js" asp-append-version="true"></script>

    <script>
        (function(){
            function safeParseJson(elId, fallback){
                try {
                    const el = document.getElementById(elId);
                    if(!el) return fallback;
                    const txt = (el.textContent||'').trim();
                    if(!txt) return fallback;
                    return JSON.parse(txt);
                } catch { return fallback; }
            }

            function init(){
                try {
                    const flightsPerYearJson = safeParseJson('passportFlightsPerYear', []);
                    const byAirline = safeParseJson('passportFlightsByAirline', {});
                    const byType = safeParseJson('passportFlightsByAircraftType', {});
                    if (window.Passport) {
                        try { window.Passport.initPassportChart && window.Passport.initPassportChart(flightsPerYearJson); } catch {}
                        try { window.Passport.initPie && window.Passport.initPie('passport-airlines-pie', byAirline, 'Airlines'); } catch {}
                        try { window.Passport.initPie && window.Passport.initPie('passport-aircraft-pie', byType, 'Aircraft'); } catch {}
                    }
                } catch { /* swallow */ }
            }

            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', init);
            } else {
                init();
            }
        })();
    </script>
}
