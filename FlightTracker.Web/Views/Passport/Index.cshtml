@model YourApp.Models.PassportViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "My Passport";
    var jsonOpts = new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase };

    string GetInitials(string name)
    {
        var parts = (name ?? string.Empty)
            .Split(' ', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
        if (parts.Length == 0) return "GU";
        if (parts.Length == 1) return new string(parts[0].Take(2).Select(char.ToUpper).ToArray());
        return string.Concat(char.ToUpper(parts[0][0]), char.ToUpper(parts[1][0]));
    }
    var initials = GetInitials(Model.UserName ?? "Guest User");
}

@section HeaderContent {
    <div class="ft-toolbar">
        <h2 class="layout__title" style="margin:0">My Passport</h2>
        <div class="ft-toolbar__actions">
            <select aria-label="Filter by Year" class="rz-textbox" style="padding:.35rem .5rem;border:1px solid var(--rz-input-border, #E0E0E0);border-radius:6px;min-width:130px;">
                <option value="">Filter by Year</option>
                @foreach (var kv in Model.FlightsPerYear.OrderBy(k => k.Key))
                {
                    <option value="@kv.Key">@kv.Key</option>
                }
            </select>
            <input type="search" aria-label="Search" placeholder="Search" class="rz-textbox" style="padding:.35rem .6rem;border:1px solid var(--rz-input-border, #E0E0E0);border-radius:999px;min-width:200px;" />
        </div>
    </div>
}

<!-- Passport Card -->
<div class="rz-card" style="margin-bottom:1rem">
    <div class="rz-card-body" style="display:flex;align-items:center;gap:1rem;flex-wrap:wrap">
        <div style="width:56px;height:56px;border-radius:50%;background:#EEE;display:flex;align-items:center;justify-content:center;overflow:hidden">
            @if (!string.IsNullOrWhiteSpace(Model.AvatarUrl))
            {
                <img src="@Model.AvatarUrl" alt="@Model.UserName" style="width:100%;height:100%;object-fit:cover;display:block"
                     onerror="this.style.display='none'; var f=this.nextElementSibling; if(f) f.style.display='inline-flex';" />
            }
            <span style="display:@(string.IsNullOrWhiteSpace(Model.AvatarUrl) ? "inline-flex" : "none");align-items:center;justify-content:center;width:100%;height:100%;font-weight:600;color:#555;">
                @initials
            </span>
        </div>
        <div style="min-width:200px">
            <div style="font-weight:600;font-size:1.1rem">@Model.UserName</div>
            <div style="display:flex;gap:1rem;color:#555;font-size:.9rem">
                <div><span class="material-icons" style="font-size:1rem;vertical-align:middle">flight</span> @Model.TotalFlights Flights</div>
                <div><span class="material-icons" style="font-size:1rem;vertical-align:middle">apartment</span> @Model.AirlinesVisited?.Count Airlines</div>
                <div><span class="material-icons" style="font-size:1rem;vertical-align:middle">location_city</span> @Model.AirportsVisited?.Count Airports</div>
            </div>
        </div>
        <div style="display:flex;gap:.4rem;align-items:center;flex-wrap:wrap;margin-left:auto">
            @if (Model.CountriesVisitedIso2 != null)
            {
                foreach (var cc in Model.CountriesVisitedIso2)
                {
                    var code = (cc ?? string.Empty).ToLowerInvariant();
                    <span class="fi fi-@code" title="@cc" aria-label="@cc"></span>
                }
            }
        </div>
    </div>
    <div class="rz-card-footer" style="font-size:.8rem;color:#666">Profile overview</div>
    </div>

<!-- Flight Routes section -->
<div class="rz-card" style="margin-bottom:1rem">
    <div class="rz-card-header" style="display:flex;align-items:center;gap:.5rem">
        <span class="material-icons" aria-hidden="true">public</span>
        <h3 style="margin:0">Flight Routes</h3>
    </div>
    <div class="rz-card-body">
        <div id="flightMap" class="flight-map__map" style="min-height:60vh"></div>
    </div>
    <div class="rz-card-footer" style="font-size:.8rem;color:#666">Routes drawn from recorded flights</div>
    </div>

<!-- Cards + Charts responsive grid -->
<div class="ft-passport-grid" style="margin:1rem 0">
    <div class="ft-passport-grid__cards">
    <!-- Stats grid -->
    <div class="ft-stats-grid">
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">timeline</span>
                    <div>
                        <div style="font-weight:600">Total Miles</div><div>@Model.TotalMiles mi</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">trending_up</span>
                    <div>
                        <div style="font-weight:600">Longest Flight</div><div>@Model.LongestFlightMiles mi</div>
            </div></div>
        </div></div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">trending_down</span>
                    <div>
                        <div style="font-weight:600">Shortest Flight</div><div>@Model.ShortestFlightMiles mi</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">airlines</span>
                    <div>
                        <div style="font-weight:600">Favorite Airline</div><div>@Model.FavoriteAirline</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">public</span>
                    <div>
                        <div style="font-weight:600">Countries Visited</div><div>@(Model.CountriesVisitedIso2?.Count ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">flight_land</span>
                    <div>
                        <div style="font-weight:600">Airports Visited</div><div>@(Model.AirportsVisited?.Count ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-symbols-outlined">multiple_airports</span>
                    <div>
                        <div style="font-weight:600">Favorite Airport</div><div>@(string.IsNullOrWhiteSpace(Model.FavoriteAirport) ? "None" : Model.FavoriteAirport)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">flight</span>
                    <div>
                        <div style="font-weight:600">Most flown aircraft type</div><div>@(string.IsNullOrWhiteSpace(Model.MostFlownAircraftType) ? "None" : Model.MostFlownAircraftType)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ft-stats-grid__item">
        <div class="rz-card">
            <div class="rz-card-body">
                <div style="display:flex;align-items:center;gap:.6rem">
                    <span class="material-icons">flight_class</span>
                    <div>
                        <div style="font-weight:600">Favorite class</div><div>@(string.IsNullOrWhiteSpace(Model.FavoriteClass) ? "None" : Model.FavoriteClass)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        </div>
    </div>

    <aside class="ft-passport-grid__charts">
        <div class="rz-card">
            <div class="rz-card-header" style="display:flex;align-items:center;gap:.5rem">
                <span class="material-icons" aria-hidden="true">apartment</span>
                <h3 style="margin:0">Airlines Flown</h3>
            </div>
            <div class="rz-card-body">
                <div id="passport-airlines-pie" style="min-height:260px"></div>
            </div>
        </div>

        <div class="rz-card">
            <div class="rz-card-header" style="display:flex;align-items:center;gap:.5rem">
                <span class="material-icons" aria-hidden="true">flight</span>
                <h3 style="margin:0">Aircraft Types</h3>
            </div>
            <div class="rz-card-body">
                <div id="passport-aircraft-pie" style="min-height:260px"></div>
            </div>
        </div>
    </aside>
</div>

<!-- Flights per Year chart -->
<div class="rz-card" style="margin:1rem 0 2rem">
    <div class="rz-card-header" style="display:flex;align-items:center;gap:.5rem">
        <span class="material-icons" aria-hidden="true">bar_chart</span>
        <h3 style="margin:0">Flights Per Year</h3>
    </div>
    <div class="rz-card-body">
        <div id="passport-chart" style="min-height:300px"></div>
    </div>
    <div class="rz-card-footer" style="font-size:.8rem;color:#666">Yearly flight counts</div>
    </div>

@section Scripts {
    <!-- Data payload for shared flight map component -->
    <script type="application/json" id="flightMapData">@Html.Raw(JsonSerializer.Serialize(Model.Routes ?? new(), jsonOpts))</script>
    <script type="application/json" id="passportFlightsPerYear">@Html.Raw(JsonSerializer.Serialize(Model.FlightsPerYear ?? new(), jsonOpts))</script>
    <script type="application/json" id="passportFlightsByAirline">@Html.Raw(JsonSerializer.Serialize(Model.FlightsByAirline ?? new(), jsonOpts))</script>
    <script type="application/json" id="passportFlightsByAircraftType">@Html.Raw(JsonSerializer.Serialize(Model.FlightsByAircraftType ?? new(), jsonOpts))</script>

    <!-- Dependencies (ApexCharts for charting) -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <!-- Shared flight map script (auto-initializes if #flightMap and #flightMapData exist) -->
    <script src="~/js/flight-map.js" asp-append-version="true"></script>
    <!-- Page script -->
    <script src="~/js/passport.js" asp-append-version="true"></script>

    <script>
        (function(){
            function safeParseJson(elId, fallback){
                try {
                    const el = document.getElementById(elId);
                    if(!el) return fallback;
                    const txt = (el.textContent||'').trim();
                    if(!txt) return fallback;
                    return JSON.parse(txt);
                } catch { return fallback; }
            }

            function init(){
                try {
                    const flightsPerYearJson = safeParseJson('passportFlightsPerYear', []);
                    const byAirline = safeParseJson('passportFlightsByAirline', {});
                    const byType = safeParseJson('passportFlightsByAircraftType', {});
                    if (window.Passport) {
                        try { window.Passport.initPassportChart && window.Passport.initPassportChart(flightsPerYearJson); } catch {}
                        try { window.Passport.initPie && window.Passport.initPie('passport-airlines-pie', byAirline, 'Airlines'); } catch {}
                        try { window.Passport.initPie && window.Passport.initPie('passport-aircraft-pie', byType, 'Aircraft'); } catch {}
                    }
                } catch { /* swallow */ }
            }

            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', init);
            } else {
                init();
            }
        })();
    </script>
}
